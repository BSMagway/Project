// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectServer.Data;

#nullable disable

namespace ProjectServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230906133449_TestDB")]
    partial class TestDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("ProjectServer.Entities.Costumer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ContractNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Costumers");
                });

            modelBuilder.Entity("ProjectServer.Entities.Dimension", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DimensionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("DimensionValue")
                        .HasColumnType("REAL");

                    b.Property<Guid>("MoistureSoilTestId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MoistureSoilTestId");

                    b.ToTable("Dimendions");
                });

            modelBuilder.Entity("ProjectServer.Entities.MoistureSoilTest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CostumerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTest")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentTest")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MoistureSoilTestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CostumerId");

                    b.ToTable("MoistureSoilTests");
                });

            modelBuilder.Entity("ProjectServer.Entities.Dimension", b =>
                {
                    b.HasOne("ProjectServer.Entities.MoistureSoilTest", null)
                        .WithMany("Dimensions")
                        .HasForeignKey("MoistureSoilTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectServer.Entities.MoistureSoilTest", b =>
                {
                    b.HasOne("ProjectServer.Entities.Costumer", "Costumer")
                        .WithMany()
                        .HasForeignKey("CostumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Costumer");
                });

            modelBuilder.Entity("ProjectServer.Entities.MoistureSoilTest", b =>
                {
                    b.Navigation("Dimensions");
                });
#pragma warning restore 612, 618
        }
    }
}
